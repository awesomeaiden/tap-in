import { Request, Response, NextFunction } from 'express';
import axios, { AxiosResponse } from 'axios';
import * as types from '../types';
import { db } from '../app'
import * as utils from '../utils'

// Registers a new user in the database and initializes empty profile.
const registerUser = async (req: Request, res: Response, next: NextFunction) => {
    // Parse user registration info
    let userAuth: types.UserAuthenticationInfo = {
        email: req.body.email,
        pass: req.body.pass
    };
    let userBio: types.UserBio = {
        first: req.body.first,
        last: req.body.last
    };
    let regInfo: types.UserRegistrationInfo = {
        auth: userAuth,
        bio: userBio
    };
    // Add user to database
    let usersRef = db.ref("/users");
    let newUserRef = usersRef.push(req);
    // Get unique user ID generated by firebase
    let userID = newUserRef.key;

    // Create empty profile for new user
    let profileRef = db.ref("/profiles");
    profileRef.set({
        [userID]: []
    });

    // Generate new API token
    let token = utils.hash(Date.now().toString());
    let hashedToken = utils.hash(token);

    // Store hashedToken in database
    let tokensRef = db.ref("/tokens");
    tokensRef.set({
        [hashedToken]: userID
    });

    // let result: AxiosResponse = await axios.get(`https://jsonplaceholder.typicode.com/posts`);
    // let posts: [Post] = result.data;
    // return res.status(200).json({
    //     message: posts
    // });
};

export default { registerUser };
